# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


#pool:
#  vmImage: ubuntu-latest
pool:
  name: Abdeen

variables:
- name: status
  value: success


stages:
- stage : Mystage
  jobs :
  - job :  MyJob
    strategy :
        maxParallel : 2
        matrix:
             JOB1:
                 Version: int1
                 AppName: foo
             JOB2:
                 Version: qcx
                 AppName: bar  

    variables:
      - name: Environmentstatus
        value: 1




    steps: 
      
      - bash: echo "##vso[task.setvariable variable=Environmentstatus]$(Version)"
        displayName: Set new variable value
        condition: Succeeded()

      - ${{ if eq(Environmentstatus, 'int1') }}:     
        - bash: |
           echo $(Environmentstatus)
           echo "##vso[task.setvariable variable=int1status]$(Version) is up"
          displayName: int1
      - ${{ elseif eq(Environmentstatus, 'qcx') }}: 
         - bash: |
            echo $(Environmentstatus)
            echo "##vso[task.setvariable variable=qcxstatus]$(Version) is up"
      # - task: PowerShell@2
      #   inputs: 
      #    targetType: 'inline'
      #    script: |
      #       echo  "$(Version)"
      #       $myTeamsWebHook = “https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f”
      #      # Invoke-RestMethod -Method post -ContentType 'Application/Json' -Body '{"text":"$(version) Test Teams is up"}' -Uri $myTeamsWebHook 
      #   condition: Succeeded()   

      # - task: PowerShell@2
      #   inputs:
      #    targetType: 'inline'
      #    script: |
      #       $myTeamsWebHook = “https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f”
      #    #   Invoke-RestMethod -Method post -ContentType 'Application/Json' -Body '{"text":"$(version) Test Teams is down"}' -Uri $myTeamsWebHook 
      #   condition: Failed()

  - job: MyJob2 
    dependsOn: MyJob
    variables:
      $(Version): $[ dependencies.MyJob.outputs['setEnv.$(Version)'] ]
    steps:
    - task: PowerShell@2
      inputs: 
         targetType: 'inline'
         script: |
            echo $(Version)        
            # $myTeamsWebHook = “https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f”
            # Invoke-RestMethod -Method post -ContentType 'Application/Json' -Body '{"text":"$(int1) `n$(qcx)"}' -Uri $myTeamsWebHook 
      condition: Succeeded()   

               
          
    # - ${{ if eq('Version', 'int1') }}:
   #  - ${{ if eq(variables['Version'], 'qcx') }}:
    #    - script: |
     #         Write-Host "##vso[task.setvariable variable=qcxStatus;]qcx Test Teams is up"              



    #  - task: PowerShell@2
    #    inputs:
    #      targetType: 'inline'
    #      script: |
    #          $myTeamsWebHook = “https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f”
    #          Invoke-RestMethod -Method post -ContentType 'Application/Json' -Body '{"text":"$(version) Test Teams is down"}' -Uri $myTeamsWebHook 
    #    condition: Succeeded()
       
    #  - task: PowerShell@2
    #    inputs:
    #      targetType: 'inline'
    #      script: |
    #          $myTeamsWebHook = “https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f”
    #          Invoke-RestMethod -Method post -ContentType 'Application/Json' -Body '{"text":"$(int1Status) `n$(qcxStatus)" , "Title" : "Environment status:"}' -Uri $myTeamsWebHook          


      

#name: sampleWeb_$(Date:yyyyMMdd)$(Rev:.r)
#trigger:
#- main
#resources:
#  webhooks:
#  - webhook: MVAUK
#    connection: Incoming Webhook
#    type: Incoming Webhook
#variables: 
#  - name: webhookURL
#    value: Abdeen

# parameters:
# - name: listOfStrings
#   type: object
#   default:
#   - stageDependencies.A1.MyJob1.result
#   - stageDependencies.A1.MyJob2.result

# stages:
#   - stage: A1
#     jobs:
#     - job: MyJob1
#       displayName: Abdeen1
#       steps:
#       - script: 
#          echo  Hello world
#     - job: MyJob2
#       displayName: Abdeen2
#       steps:
#       - script: 
#          echo  Hello world 2    



  # - stage: A2
  #   variables:
  #     - name: MyJob1
  #       value : stageDependencies.A1.MyJob1.result
  #     - name: MyJob2
  #       value : stageDependencies.A1.MyJob2.result  
  #   dependsOn: A1              
  #   jobs:
  #   - job: MyJob3
  #     condition: eq(stageDependencies.A1.MyJob1.result, 'Failed') 
  #     steps:
  #      # - task: PowerShell@2
  #      #   inputs:
  #      #     targetType: 'inline'
  #      #     script: |
  #      #        $myTeamsWebHook = “https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f”
  #      #       
  #      #        Invoke-RestMethod -Method post -ContentType 'Application/Json' -Body '{"text":"Test Teams!"}' -Uri $myTeamsWebHook
  #  #     - ${{ each value in parameters.listOfStrings }}:
  #  #        - script: echo ${{ value }}
  #  #        # variables['${{ value }}']
  #  #        - ${{ if eq(dependencies.A1.MyJob1.result , 'Succeeded') }}:
  #            - task: PowerShell@2
  #              inputs:
  #                targetType: 'inline'
  #                script: |
  #                  $myTeamsWebHook = “https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f”
  #                  Invoke-RestMethod -Method post -ContentType 'Application/Json' -Body '{"text":"Test Teams!"}' -Uri $myTeamsWebHook
  #   #       - ${{ else }}: 
  #   #         - script: echo Abdeen failed 


 #       success{
 #          office365ConnectorSend (
 #           status: "Pipeline Status",
 #           webhookUrl: "https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f",
 #           color: '00ff00',
 #           message: "Test Successful: ${JOB_NAME}"
 #           )}
 #        failure{
 #          office365ConnectorSend (
 #           status: "Pipeline Status",
 #           webhookUrl: "https://vodafone.webhook.office.com/webhookb2/57d56a25-1bd8-43de-a333-251ee152be67@68283f3b-8487-4c86-adb3-a5228f18b893/IncomingWebhook/40060548445f42488a707b744a5c5c3d/ae86f284-3d1d-442b-8cd6-28c89bd0544f",
 #           color: '00ff00',
 #           message: "Test fail: ${JOB_NAME}"
 #           )}


